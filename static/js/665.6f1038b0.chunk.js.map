{"version":3,"file":"static/js/665.6f1038b0.chunk.js","mappings":"oNAMA,MAAMA,EAAgB,CACpBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAENC,EAASC,EAAAA,KAAaC,MAAM,CAChCL,KAAMI,EAAAA,KAEHE,IAAI,EAAG,oBACPC,IAAI,GAAI,oBACRC,SAAS,wBACZP,MAAOG,EAAAA,KAEJH,MAAM,uCACNO,SAAS,qBACZN,SAAUE,EAAAA,KAEPI,SAAS,yBACTF,IAAI,EAAG,wDA0FZ,EAvFqBG,KACnB,MAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAASC,EAAAA,EAAAA,IAAU,CACvBd,gBACAe,SAAUA,CAACC,EAAMC,KAAqB,IAAnB,UAAEC,GAAWD,EAC9BN,GAASQ,EAAAA,EAAAA,IAASH,IAClBE,GAAW,EAEbE,iBAAkBhB,IAGdiB,IAAeR,EAAOS,SAAWT,EAAOU,OAE9C,OACEC,EAAAA,EAAAA,MAAA,QAAMC,YAAU,EAACC,aAAa,MAAMX,SAAUF,EAAOc,aAAaC,SAAA,EAChEC,EAAAA,EAAAA,KAAA,MACEC,MAAO,CACLC,aAAc,OACdC,UAAW,SACXC,cAAe,aACfL,SACH,cAIDC,EAAAA,EAAAA,KAAA,OAAAD,UACEJ,EAAAA,EAAAA,MAAA,SAAAI,SAAA,CAAO,YAELC,EAAAA,EAAAA,KAAA,SACEpB,UAAQ,EACRyB,KAAK,OACLjC,KAAK,OACLkC,SAAUtB,EAAOuB,aACjBC,MAAOxB,EAAOG,OAAOf,KACrBqC,YAAY,oBAEbzB,EAAO0B,OAAOtC,MAAQY,EAAO2B,QAAQvC,MACpC4B,EAAAA,EAAAA,KAAA,QAAAD,SAAOf,EAAO0B,OAAOtC,OACnB,WAIR4B,EAAAA,EAAAA,KAAA,OAAAD,UACEJ,EAAAA,EAAAA,MAAA,SAAAI,SAAA,CAAO,SAELC,EAAAA,EAAAA,KAAA,SACEpB,UAAQ,EACRyB,KAAK,OACLjC,KAAK,QACLkC,SAAUtB,EAAOuB,aACjBC,MAAOxB,EAAOG,OAAOd,MACrBoC,YAAY,yBAEbzB,EAAO0B,OAAOrC,OAASW,EAAO2B,QAAQtC,OACrC2B,EAAAA,EAAAA,KAAA,QAAAD,SAAOf,EAAO0B,OAAOrC,QACnB,WAIR2B,EAAAA,EAAAA,KAAA,OAAAD,UACEJ,EAAAA,EAAAA,MAAA,SAAAI,SAAA,CAAO,YAELC,EAAAA,EAAAA,KAAA,SACEpB,UAAQ,EACRyB,KAAK,WACLR,aAAa,mBACbzB,KAAK,WACLkC,SAAUtB,EAAOuB,aACjBC,MAAOxB,EAAOG,OAAOb,SACrBmC,YAAY,sBAEbzB,EAAO0B,OAAOpC,UAAYU,EAAO2B,QAAQrC,UACxC0B,EAAAA,EAAAA,KAAA,QAAAD,SAAOf,EAAO0B,OAAOpC,WACnB,WAIR0B,EAAAA,EAAAA,KAAA,UAAAD,UACEC,EAAAA,EAAAA,KAAA,UAAQK,KAAK,SAASO,SAAUpB,EAAWO,SAAC,eAIzC,ECjGX,EAViBc,KAEbb,EAAAA,EAAAA,KAAA,WAAAD,UACEC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACnB,EAAY,O","sources":["components/RegisterForm/RegisterForm.jsx","pages/Register.js"],"sourcesContent":["import React from 'react';\nimport { useFormik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport * as yup from 'yup';\nimport { register } from '../../redux/auth/operations.js';\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .min(3, 'to short, min: 3')\n    .max(20, 'to long, max: 20')\n    .required('Username is required'),\n  email: yup\n    .string()\n    .email('Email must be a valid email address')\n    .required('Email is required'),\n  password: yup\n    .string()\n    .required('No password provided.')\n    .min(7, 'Password is too short - should be 8 chars minimum.'),\n});\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues,\n    onSubmit: (values, { resetForm }) => {\n      dispatch(register(values));\n      resetForm();\n    },\n    validationSchema: schema,\n  });\n\n  const isDisabled = !(formik.isValid && formik.dirty);\n\n  return (\n    <form noValidate autoComplete=\"off\" onSubmit={formik.handleSubmit}>\n      <h3\n        style={{\n          marginBottom: '30px',\n          textAlign: 'center',\n          textTransform: 'uppercase',\n        }}\n      >\n        REGISTER\n      </h3>\n\n      <div>\n        <label>\n          USERNAME\n          <input\n            required\n            type=\"text\"\n            name=\"name\"\n            onChange={formik.handleChange}\n            value={formik.values.name}\n            placeholder=\"3-20 characters\"\n          />\n          {formik.errors.name && formik.touched.name ? (\n            <span>{formik.errors.name}</span>\n          ) : null}\n        </label>\n      </div>\n\n      <div>\n        <label>\n          EMAIL\n          <input\n            required\n            type=\"text\"\n            name=\"email\"\n            onChange={formik.handleChange}\n            value={formik.values.email}\n            placeholder=\"ex. contact@mail.com\"\n          />\n          {formik.errors.email && formik.touched.email ? (\n            <span>{formik.errors.email}</span>\n          ) : null}\n        </label>\n      </div>\n\n      <div>\n        <label>\n          PASSWORD\n          <input\n            required\n            type=\"password\"\n            autoComplete=\"current-password\"\n            name=\"password\"\n            onChange={formik.handleChange}\n            value={formik.values.password}\n            placeholder=\"min. 8 characters\"\n          />\n          {formik.errors.password && formik.touched.password ? (\n            <span>{formik.errors.password}</span>\n          ) : null}\n        </label>\n      </div>\n\n      <center>\n        <button type=\"submit\" disabled={isDisabled}>\n          SUBMIT\n        </button>\n      </center>\n    </form>\n  );\n};\n\nexport default RegisterForm;\n","import React from 'react';\nimport RegisterForm from '../components/RegisterForm/RegisterForm.jsx';\n\nconst Register = () => {\n  return (\n    <section>\n      <div>\n        <RegisterForm />\n      </div>\n    </section>\n  );\n};\n\nexport default Register;\n"],"names":["initialValues","name","email","password","schema","yup","shape","min","max","required","RegisterForm","dispatch","useDispatch","formik","useFormik","onSubmit","values","_ref","resetForm","register","validationSchema","isDisabled","isValid","dirty","_jsxs","noValidate","autoComplete","handleSubmit","children","_jsx","style","marginBottom","textAlign","textTransform","type","onChange","handleChange","value","placeholder","errors","touched","disabled","Register"],"sourceRoot":""}